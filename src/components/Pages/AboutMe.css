.AboutMe-content {
  display: flex;
  justify-content: space-around;
  height: 500px;
  padding: 10px;
}

.AboutMe-content p {
  padding: 17%;
}

.AboutMe-content .bio {
  width: 100%;
}

.Numbershidden-content {
  display: none;
}

#bgdots {
  position: relative;
  top: 5%;
  right: 129%;
  width: 100px;
}
#shanepix {
  position: relative;
  top: 70px;
}

.animate__fadeInDown {
  animation-duration: 3s;
}
.animate__slideInLeft {
  animation-duration: 3s;
}

.numbersDisplay {
  width: 80%;
  position: absolute;
  top: 83%;
  right: 21%;
  display: flex;
  justify-content: space-evenly;
}
.bio h1 {
  color: teal;
  position: relative;
  bottom: 10px;
}

.numbersDisplay h1 {
  color: teal;
  padding: 10px;
  font-size: large;
}
.numbersDisplay span {
  color: black;
}

/*Media Queries for small devices */

@media only screen and (max-width: 600px) {
  .About-picture {
    display: none;
  }

  .numbersDisplay {
    display: none;
  }
  .numbersDisplay h1 span {
    font-size: 5px;
  }

  .AboutMe-content {
    display: block;
  }

  .bio {
    font-size: 10px;
    position: relative;
    background-color: rgba(206, 255, 196, 0.221);
  }

  #aboutmeheading {
    position: absolute;
    left: 60px;
    top: 20px;
  }
  #shanepix {
    position: absolute;
    right: -60px;
    top: -170px;
  }
  .Numbershidden-content {
    display: block;
    
  }

  /* counter of experince*/

  @property --num {
    syntax: "<integer>";
    initial-value: 1;
    inherits: false;
  }
  #numbercounter {
    animation: counter 10s alternate ease-in-out;
    counter-reset: num var(--num);
    font: 800 40px system-ui;
    padding: 2rem;
    position: relative;
    bottom: 30px;
    color: rgba(0, 0, 0, 0.458);
    font-size: 60px;
  }
  
  #numbercounter::after {
    content: counter(num);
  }
  
  @keyframes counter {
    0% {
      --num: 0;
    }
    
    100% {
      --num: 1;
    }
  }
  /* code ends here */

  /* second counter */

  @property --number {
    syntax: "<integer>";
    initial-value: 5;
    inherits: false;
  }
  #secondcounter {
    animation: counters 10s alternate ease-in-out;
    counter-reset: number var(--number);
    font: 800 40px system-ui;
    padding: 2rem;
    position: relative;
    bottom: 30px;
    color: rgba(0, 0, 0, 0.458);
    font-size: 60px;
  }

  #secondcounter::after {
    content: counter(number);
  }

  @keyframes counters {
    0% {
      --number: 0;
    }
   
    100% {
      --number: 5;
    }
  }
  /* code ends here */

  /* third counter start here */

  @property --numbers {
    syntax: "<integer>";
    initial-value: 20;
    inherits: false;
  }
  #thirdcounter {
    animation: count 10s  alternate ease-in-out;
    counter-reset: numbers var(--numbers);
    font: 800 40px system-ui;
    padding: 2rem;
    position: relative;
    bottom: 30px;
    color: rgba(0, 0, 0, 0.458);
    font-size: 60px;
  }

  #thirdcounter::after {
    content: counter(numbers);
  }

  @keyframes count {
    0% {
      --numbers: 0;
    }
    
    100% {
      --numbers: 20;
    }
  }
}

@media only screen and (max-width: 667px) {
  /* counter of experince*/

  @property --num {
    syntax: "<integer>";
    initial-value: 1;
    inherits: false;
  }
  #numbercounter {
    animation: counter 10s alternate ease-in-out;
    counter-reset: num var(--num);
    font: 800 40px system-ui;
    padding: 2rem;
    position: relative;
    bottom: 30px;
    color: rgba(0, 0, 0, 0.458);
    font-size: 60px;
  }

  #numbercounter::after {
    content: counter(num);
  }

  @keyframes counter {
    0% {
      --num: 0;
    }
   
    100% {
      --num: 1;
    }
  }
  /* code ends here */

  /* second counter */

  @property --number {
    syntax: "<integer>";
    initial-value: 5;
    inherits: false;
  }
  #secondcounter {
    animation: counters 10s  alternate ease-in-out;
    counter-reset: number var(--number);
    font: 800 40px system-ui;
    padding: 2rem;
    position: relative;
    bottom: 30px;
    color: rgba(0, 0, 0, 0.458);
    font-size: 60px;
  }

  #secondcounter::after {
    content: counter(number);
  }

  @keyframes counters {
    0% {
      --number: 0;
    }
  
    100% {
      --number: 5;
    }
  }
  /* code ends here */

  /* third counter start here */

  @property --numbers {
    syntax: "<integer>";
    initial-value: 20;
    inherits: false;
  }
  #thirdcounter {
    animation: count 10s  alternate ease-in-out;
    counter-reset: numbers var(--numbers);
    font: 800 40px system-ui;
    padding: 2rem;
    position: relative;
    bottom: 30px;
    color: rgba(0, 0, 0, 0.458);
    font-size: 60px;
  }

  #thirdcounter::after {
    content: counter(numbers);
  }

  @keyframes count {
    0% {
      --numbers: 0;
    }
    
    100% {
      --numbers: 20;
    }
  }
}
